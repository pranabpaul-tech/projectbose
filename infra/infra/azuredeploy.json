{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.5",
  "parameters": {
    "subscription_id": {
      "type": "String"
    },
    "virtualNetworks_projectboserg_vnet_externalid": {
      "defaultValue": "/subscriptions/d1036149-c113-45d5-a65b-ae5f0eb239ea/resourceGroups/projectboserg/providers/Microsoft.Network/virtualNetworks/projectboserg-vnet",
      "type": "String"
    },
    "workspaces_DefaultWorkspace_externalid": {
      "defaultValue": "/subscriptions/d1036149-c113-45d5-a65b-ae5f0eb239ea/resourceGroups/DefaultResourceGroup-WEU/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-d1036149-c113-45d5-a65b-ae5f0eb239ea-WEU",
      "type": "String"
    },
    "publicIPAddresses_externalid": {
      "defaultValue": "/subscriptions/d1036149-c113-45d5-a65b-ae5f0eb239ea/resourceGroups/MC_projectboserg_projectboseaks_westeurope/providers/Microsoft.Network/publicIPAddresses/6dc877d0-3cc6-4ae7-809e-15c874287917",
      "type": "String"
    },
    "userAssignedIdentities_projectboserg_agentpool_externalid": {
      "defaultValue": "/subscriptions/d1036149-c113-45d5-a65b-ae5f0eb239ea/resourceGroups/MC_projectboserg_projectboseaks_westeurope/providers/Microsoft.ManagedIdentity/userAssignedIdentities/projectboserg-agentpool",
      "type": "String"
    },
    "vault_name": {
      "type": "String"
    },
    "virtualNetwork_name": {
      "type": "String"
    },
    "subnet_name": {
      "type": "String"
    },
    "deployment_location": {
      "type": "String",
      "defaultValue": "westeurope"
    },
    "cluster_deployment_location": {
      "type": "String",
      "defaultValue": "West Europe"
    },
    "addressPrefixes_vnet": {
      "type": "String"
    },
    "addressPrefixes_subnet": {
      "type": "String"
    },
    "registries_name": {
      "type": "String"
    },
    "registries_sku": {
      "type": "String"
    },
    "managedCluster_name": {
      "type": "String"
    },
    "Mykeysecret_Value": {
      "type": "String"
    },
    "Cassandrakeysecret_Value": {
      "type": "String"
    },
    "staticSites_name": {
      "type": "String"
    },
    "adminPassword": {
      "defaultValue": "azureuser@12345",
      "type": "String"
    },
    "adminUsername": {
      "defaultValue": "azureuser",
      "type": "String"
    }
  },
  "variables": {
    "acrPullRole": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
  },
  "resources": [
    //Virtual Network section
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "[parameters('virtualNetwork_name')]",
      "location": "[parameters('deployment_location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefixes_vnet')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": []
        },
        "subnets": [
          {
            "name": "[parameters('subnet_name')]",
            "properties": {
              "addressPrefix": "[parameters('addressPrefixes_subnet')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    //Subnet section
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[concat(parameters('virtualNetwork_name'), '/' , parameters('subnet_name'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_name'))]"
      ],
      "properties": {
        "addressPrefix": "[parameters('addressPrefixes_subnet')]",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    //Container registry section
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-02-01-preview",
      "name": "[parameters('registries_name')]",
      "location": "[parameters('deployment_location')]",
      "sku": {
        "name": "[parameters('registries_sku')]",
        "tier": "[parameters('registries_sku')]"
      },
      "properties": {
        "adminUserEnabled": true,
        "policies": {
          "quarantinePolicy": {
            "status": "disabled"
          },
          "trustPolicy": {
            "type": "Notary",
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices",
        "zoneRedundancy": "Disabled",
        "anonymousPullEnabled": false
      },
      "resources": [
        {
          "name": "[concat('Microsoft.Authorization/', guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name')), variables('acrPullRole')))]",
          "type": "providers/roleAssignments",
          "apiVersion": "2022-04-01",
          "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_name'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name'))]"
          ],
          "properties": {
            "roleDefinitionId": "[variables('acrPullRole')]",
            "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name')), '2022-07-01').identityProfile.kubeletidentity.objectId]",
            "principalType": "ServicePrincipal"
          }
        }
      ]
    },
    //AKS cluster section
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2022-08-03-preview",
      "name": "[parameters('managedCluster_name')]",
      "location": "[parameters('cluster_deployment_location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), parameters('subnet_name'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Paid"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "kubernetesVersion": "1.24.6",
        "dnsPrefix": "[concat(parameters('managedCluster_name'), '-', resourceGroup().name, 'group-118ae9')]",
        "agentPoolProfiles": [
          {
            "name": "nodepool1",
            "count": 3,
            "vmSize": "Standard_DS2_v2",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "kubeletDiskType": "OS",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), parameters('subnet_name'))]",
            "maxPods": 30,
            "type": "VirtualMachineScaleSets",
            "availabilityZones": [
              "1",
              "2",
              "3"
            ],
            "maxCount": 5,
            "minCount": 3,
            "enableAutoScaling": true,
            "powerState": {
              "code": "Running"
            },
            "orchestratorVersion": "1.24.6",
            "enableNodePublicIP": false,
            "nodeLabels": {},
            "mode": "System",
            "enableEncryptionAtHost": false,
            "osType": "Linux",
            "osSKU": "Ubuntu",
            "enableFIPS": false
          }
        ],
        "linuxProfile": {
          "adminUsername": "azureuser",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCtFEZOCoPB72lUVw3ZYNEBceK7g4fdD5+hWo8aQAAl+c8Z1/uWFdZjM1aW1lnwsIKwWO6vL+eMs/3qtmPD4fIvCrwhBfniCdHuCt0OeikS6segz/6/tLS9KniN8rVmj2+KIYzbqwFjyAzaxi/fbHu1i9azKiWExH+3WAgSTDbbqsYAmIFsh1KqH17RFfiyykw7Q3uHUdAMJhBOQWwbtzYDN3pAoSkFzqxASSk0wCCETNq8hwpkppc1zlyILcmeUUB7NVSbfgK1hvTHZ8qwOFCH8yWTd8qDiP/Yo5wxWNb/jSP0GvvKJ8HA5Rr10sr1hqS9NdE2eY4WGmMXE/qjgdCz"
              }
            ]
          }
        },
        "windowsProfile": {
          "adminUsername": "azureuser",
          "adminPassword": "azureuser@12345",
          "enableCSIProxy": true
        },
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "addonProfiles": {
          "azureKeyvaultSecretsProvider": {
            "enabled": true,
            "config": {
              "enableSecretRotation": "false",
              "rotationPollInterval": "2m"
            }
          },
          "azurepolicy": {
            "enabled": false
          },
          "httpApplicationRouting": {
            "enabled": false
          },
          "omsAgent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('workspaces_DefaultWorkspace_externalid')]",
              "useAADAuth": "true"
            }
          }
        },
          "nodeResourceGroup": "[concat('MC_', resourceGroup().name, '_', parameters('managedCluster_name'), '_', parameters('deployment_location'))]",
          "enableRBAC": true,
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "loadBalancerSku": "Standard",
          "loadBalancerProfile": {
            "managedOutboundIPs": {
              "count": 1
            },
            "effectiveOutboundIPs": [
              {
                "id": "[parameters('publicIPAddresses_externalid')]"
              }
            ],
            "backendPoolType": "nodeIPConfiguration"
          },
          "identityProfile": {
            "kubeletidentity": {
              "resourceId": "[parameters('userAssignedIdentities_projectboserg_agentpool_externalid')]",
              "clientId": "336f8cdd-0faa-4578-9330-f2bc88ce3f3f",
              "objectId": "6f897df8-7fce-4ba6-b5f8-e53ae1fde2fc"
            }
          },
          "autoScalerProfile": {
            "balance-similar-node-groups": "false",
            "expander": "random",
            "max-empty-bulk-delete": "10",
            "max-graceful-termination-sec": "600",
            "max-node-provision-time": "15m",
            "max-total-unready-percentage": "45",
            "new-pod-scale-up-delay": "0s",
            "ok-total-unready-count": "3",
            "scale-down-delay-after-add": "10m",
            "scale-down-delay-after-delete": "10s",
            "scale-down-delay-after-failure": "3m",
            "scale-down-unneeded-time": "10m",
            "scale-down-unready-time": "20m",
            "scale-down-utilization-threshold": "0.5",
            "scan-interval": "10s",
            "skip-nodes-with-local-storage": "false",
            "skip-nodes-with-system-pods": "true"
          },
          "serviceCidr": "10.0.1.0/24",
          "dnsServiceIP": "10.0.1.10",
          "dockerBridgeCidr": "172.17.0.1/24",
          "outboundType": "loadBalancer",
          "serviceCidrs": [
            "10.0.1.0/24"
          ],
          "ipFamilies": [
            "IPv4"
          ]
        }
        }
      },
    //Keyvault Secret - MySQL
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('vault_name'), '/ConnectionStrings--MySQLRemoteConection')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_name'))]"
      ],
      "tags": {
        "file-encoding": "utf-8"
      },
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[parameters('Mykeysecret_Value')]"
      }
    },
    //Keyvault Secret - Cassandra
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('vault_name'), '/ConnectionStrings--CassandraRemoteConection')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_name'))]"
      ],
      "tags": {
        "file-encoding": "utf-8"
      },
      "properties": {
        "attributes": {
          "enabled": true
        },
        "value": "[parameters('Cassandrakeysecret_Value')]"
      }
    },
    //Keyvault section
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('vault_name')]",
      "location": "[parameters('deployment_location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantid]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name')), '2022-07-01').identityProfile.kubeletidentity.objectId]",
            "permissions": {
              "keys": [
                "get",
                "create",
                "delete",
                "list",
                "update",
                "import",
                "backup",
                "restore",
                "recover"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "backup",
                "restore",
                "recover"
              ],
              "certificates": [
                "get",
                "list",
                "delete",
                "create",
                "import",
                "update",
                "managecontacts",
                "getissuers",
                "listissuers",
                "setissuers",
                "deleteissuers",
                "manageissuers",
                "recover"
              ],
              "storage": [
                "get",
                "list",
                "delete",
                "set",
                "update",
                "regeneratekey",
                "setsas",
                "listsas",
                "getsas",
                "deletesas"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "vaultUri": "[concat('https://', parameters('vault_name'), '.vault.azure.net/')]",
        "provisioningState": "Succeeded"
      }
    },
    //AKS cluster agentpool section
    {
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('managedCluster_name'), '/nodepool1')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedCluster_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), parameters('subnet_name'))]"
      ],
      "properties": {
        "count": 3,
        "vmSize": "Standard_DS2_v2",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "kubeletDiskType": "OS",
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork_name'), parameters('subnet_name'))]",
        "maxPods": 30,
        "type": "VirtualMachineScaleSets",
        "availabilityZones": [
          "1",
          "2",
          "3"
        ],
        "maxCount": 5,
        "minCount": 3,
        "enableAutoScaling": true,
        "powerState": {
          "code": "Running"
        },
        "orchestratorVersion": "1.24.6",
        "enableNodePublicIP": false,
        "nodeLabels": {},
        "mode": "System",
        "enableEncryptionAtHost": false,
        "osType": "Linux",
        "osSKU": "Ubuntu",
        "enableFIPS": false
      }
    },
    //Static Web section
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('staticSites_name')]",
      "location": "[parameters('cluster_deployment_location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "repositoryUrl": "https://github.com/pranabpaul-tech/projectbose",
        "branch": "main",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "provider": "GitHub",
        "enterpriseGradeCdnStatus": "Disabled"
      }
    }
  ]
}